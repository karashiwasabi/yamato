----- C:\Dev\YAMATO\dat\dat.go -----
package dat  import ( 	"bufio" 	"io" 	"log" 	"strings"  	"golang.org/x/text/encoding/japanese" 	"golang.org/x/text/transform"  	"YAMATO/ma0" // モジュール名は "YAMATO"（または仕様に合わせ "wasabi" ）固定 )  // DATRecord は、DAT ファイルから抽出した各フィールドの値を保持する構造体です。 type DATRecord struct { 	DatOroshiCode         string // S 行で取得した卸コード（raw[3:14]） 	DatDate               string // D 行から raw[4:12]（YYYYMMDD形式） 	DatDeliveryFlag       string // D 行から raw[3:4] 	DatReceiptNumber      string // D 行から raw[12:22] 	DatLineNumber         string // D 行から raw[22:24] 	DatJanCode            string // D 行から raw[25:38] ※仕様書準拠の13バイト 	DatProductName        string // D 行から raw[38:78] → 必要部分のみ Shift‑JIS→UTF‑8 変換適用 	DatQuantity           string // D 行から raw[78:83] 	DatUnitPrice          string // D 行から raw[83:92] 	DatSubtotal           string // D 行から raw[92:101] 	DatPackagingDrugPrice string // D 行から raw[101:109] 	DatExpiryDate         string // D 行から raw[109:115] 	DatLotNumber          string // D 行から raw[115:121] }  // ProcessDATRecord は、作成した 13 項目のスライスを MA0.go へ送るための関数です。 // ここでは、スライスの index 4 が JAN コードであると仮定し、 // その JAN コードを利用して MA0 の重複チェック／新規登録処理（CheckOrCreateMA0）を呼び出しています。 func ProcessDATRecord(data []string) error { 	if len(data) < 5 { 		return nil // 想定外のケースでは何もしない 	} 	jan := data[4] // index 4 が JAN コード 	_, created, err := ma0.CheckOrCreateMA0(jan) 	if err != nil { 		return err 	} 	if created { 		log.Printf("[DAT] MA0 新規レコード作成: JAN=%q, 全データ=%#v", jan, data) 	} else { 		log.Printf("[DAT] 既存の MA0 レコード利用: JAN=%q, 全データ=%#v", jan, data) 	} 	return nil }  // ParseDATFile は、io.Reader から DAT ファイルの内容を読み込み、 // S 行で取得された卸コードを D 行の各レコードに適用しながら、 // 各 D 行の値を DATRecord に変換するとともに、 // 次工程へ送るための 13 項目のスライス（recordData）の生成と ProcessDATRecord の呼び出しを行います。 // また、総件数、MA0 の新規登録件数、重複件数をカウントして返します。 func ParseDATFile(r io.Reader) (records []DATRecord, totalCount, ma0CreatedCount, duplicateCount int, err error) { 	scanner := bufio.NewScanner(r) 	var currentOroshiCode string = "" 	for scanner.Scan() { 		line := scanner.Text() 		if len(line) < 3 { 			continue 		} 		// S 行（識別子 "S20"）の場合、卸コードを抽出して保存する 		if strings.HasPrefix(line, "S20") { 			currentOroshiCode = strings.TrimSpace(line[3:12]) 			continue 		} 		// D 行（識別子 "D20"）のみを対象とする 		if !strings.HasPrefix(line, "D20") { 			continue 		} 		totalCount++  		// 固定長フィールド抽出のヘルパー関数 		getField := func(s string, start, end int) string { 			if len(s) >= end { 				return s[start:end] 			} 			if len(s) > start { 				return s[start:] 			} 			return "" 		}  		// 各フィールドを仕様書に基づく位置から抽出する 		datDate := getField(line, 4, 12) 		datDeliveryFlag := getField(line, 3, 4) 		datReceiptNumber := getField(line, 12, 22) 		datLineNumber := getField(line, 22, 24) 		datJanCode := getField(line, 25, 38) 		// 商品名だけは Shift‑JIS→UTF‑8 変換を適用する 		rawProductName := getField(line, 38, 78) 		datProductName, _, errConv := transform.String(japanese.ShiftJIS.NewDecoder(), rawProductName) 		if errConv != nil { 			log.Printf("[DAT] 商品名変換エラー: %v", errConv) 			datProductName = rawProductName 		} 		datQuantity := getField(line, 78, 83) 		datUnitPrice := getField(line, 83, 92) 		datSubtotal := getField(line, 92, 101) 		datPackagingDrugPrice := getField(line, 101, 109) 		datExpiryDate := getField(line, 109, 115) 		datLotNumber := getField(line, 115, 121)  		// 作成した各フィールドを DATRecord 構造体にまとめる 		record := DATRecord{ 			DatOroshiCode:         currentOroshiCode, 			DatDate:               datDate, 			DatDeliveryFlag:       datDeliveryFlag, 			DatReceiptNumber:      datReceiptNumber, 			DatLineNumber:         datLineNumber, 			DatJanCode:            datJanCode, 			DatProductName:        datProductName, 			DatQuantity:           datQuantity, 			DatUnitPrice:          datUnitPrice, 			DatSubtotal:           datSubtotal, 			DatPackagingDrugPrice: datPackagingDrugPrice, 			DatExpiryDate:         datExpiryDate, 			DatLotNumber:          datLotNumber, 		} 		records = append(records, record)  		// 新しいフィールド順に沿って、13項目のスライスを生成する 		// 順番は以下の通り： 		// index 0: DatOroshiCode 		// index 1: DatDate 		// index 2: DatDeliveryFlag 		// index 3: DatReceiptNumber 		// index 4: DatJanCode    ← JAN コード（SQL への送信でキーとなる） 		// index 5: DatLineNumber 		// index 6: DatProductName 		// index 7: DatQuantity 		// index 8: DatUnitPrice 		// index 9: DatSubtotal 		// index 10: DatPackagingDrugPrice 		// index 11: DatExpiryDate 		// index 12: DatLotNumber 		recordData := []string{ 			currentOroshiCode, 			datDate, 			datDeliveryFlag, 			datReceiptNumber, 			datJanCode, 			datLineNumber, 			datProductName, 			datQuantity, 			datUnitPrice, 			datSubtotal, 			datPackagingDrugPrice, 			datExpiryDate, 			datLotNumber, 		}  		// 次工程（MA0.go 側）へ、このデータを送ります。 		errProc := ProcessDATRecord(recordData) 		if errProc != nil { 			log.Printf("[DAT] レコード処理エラー (JAN=%q): %v", datJanCode, errProc) 		} 		// ※ここで、ProcessDATRecord 内で MA0.go の関数 (CheckOrCreateMA0 等) を呼び出し、 		// MA0 の新規登録か重複かのログ出力を実施しています。 	} 	if err = scanner.Err(); err != nil { 		return 	} 	return }

----- C:\Dev\YAMATO\jancode\jancode.go -----
package jancode  import ( 	"encoding/csv" 	"io" 	"log" )  // JAFields は、JANCODE CSVから取り出す JA領域の各フィールドを保持する構造体です。 // 例として、JA000、JA001、JA029 を定義していますが、必要に応じて中間のフィールドも追加してください。 type JAFields struct { 	JA000 string 	JA001 string 	JA002 string 	JA003 string 	JA004 string 	JA005 string 	JA006 string 	JA007 string 	JA008 string 	JA009 string 	JA010 string 	JA011 string 	JA012 string 	JA013 string 	JA014 string 	JA015 string 	JA016 string 	JA017 string 	JA018 string 	JA019 string 	JA020 string 	JA021 string 	JA022 string 	JA023 string 	JA024 string 	JA025 string 	JA026 string 	JA027 string 	JA028 string 	JA029 string }  // JANCODERecord は、JANCODE CSVの1行分のデータを表します。 // キーは、フィールド1の値（JANコード）として使用し、JA領域の情報を保持します。 type JANCODERecord struct { 	JANCode string   // CSVのインデックス1 (JANコード) 	JA      JAFields // JA領域の情報 }  // ParseJANCODE は、入力の io.Reader から CSV データを読み込み、 // ヘッダー行をスキップした上で各行を JANCODERecord のスライスに変換して返します。 // CSVは各行が少なくとも30フィールド（インデックス0～29）を持つことを前提としています。 func ParseJANCODE(r io.Reader) ([]JANCODERecord, error) { 	reader := csv.NewReader(r) 	rows, err := reader.ReadAll() 	if err != nil { 		return nil, err 	}  	var records []JANCODERecord 	for i, row := range rows { 		// 1行目はヘッダーのためスキップ 		if i == 0 { 			continue 		}  		if len(row) < 30 { 			log.Printf("Row %d: insufficient fields (%d)", i+1, len(row)) 			continue 		}  		ja := JAFields{ 			JA000: row[0], 			JA001: row[1], 			JA002: row[2], 			JA003: row[3], 			JA004: row[4], 			JA005: row[5], 			JA006: row[6], 			JA007: row[7], 			JA008: row[8], 			JA009: row[9], 			JA010: row[10], 			JA011: row[11], 			JA012: row[12], 			JA013: row[13], 			JA014: row[14], 			JA015: row[15], 			JA016: row[16], 			JA017: row[17], 			JA018: row[18], 			JA019: row[19], 			JA020: row[20], 			JA021: row[21], 			JA022: row[22], 			JA023: row[23], 			JA024: row[24], 			JA025: row[25], 			JA026: row[26], 			JA027: row[27], 			JA028: row[28], 			JA029: row[29], 		}  		record := JANCODERecord{ 			JANCode: row[1], // キーとしてフィールド1の値を使用 			JA:      ja, 		}  		records = append(records, record) 	} 	return records, nil }

----- C:\Dev\YAMATO\jchms\jchms.go -----
package jchms  import ( 	"encoding/csv" 	"io" 	"log" )  // JCFields は、JCHMAS CSVから取り出す JC 領域の各フィールドを保持する構造体です。 // ここでは例として JC000, JC001, JC124 を定義していますが、必要に応じて他のフィールドも追加してください。 type JCFields struct { 	JC000 string 	JC001 string 	JC002 string 	JC003 string 	JC004 string 	JC005 string 	JC006 string 	JC007 string 	JC008 string 	JC009 string 	JC010 string 	JC011 string 	JC012 string 	JC013 string 	JC014 string 	JC015 string 	JC016 string 	JC017 string 	JC018 string 	JC019 string 	JC020 string 	JC021 string 	JC022 string 	JC023 string 	JC024 string 	JC025 string 	JC026 string 	JC027 string 	JC028 string 	JC029 string 	JC030 string 	JC031 string 	JC032 string 	JC033 string 	JC034 string 	JC035 string 	JC036 string 	JC037 string 	JC038 string 	JC039 string 	JC040 string 	JC041 string 	JC042 string 	JC043 string 	JC044 string 	JC045 string 	JC046 string 	JC047 string 	JC048 string 	JC049 string 	JC050 string 	JC051 string 	JC052 string 	JC053 string 	JC054 string 	JC055 string 	JC056 string 	JC057 string 	JC058 string 	JC059 string 	JC060 string 	JC061 string 	JC062 string 	JC063 string 	JC064 string 	JC065 string 	JC066 string 	JC067 string 	JC068 string 	JC069 string 	JC070 string 	JC071 string 	JC072 string 	JC073 string 	JC074 string 	JC075 string 	JC076 string 	JC077 string 	JC078 string 	JC079 string 	JC080 string 	JC081 string 	JC082 string 	JC083 string 	JC084 string 	JC085 string 	JC086 string 	JC087 string 	JC088 string 	JC089 string 	JC090 string 	JC091 string 	JC092 string 	JC093 string 	JC094 string 	JC095 string 	JC096 string 	JC097 string 	JC098 string 	JC099 string 	JC100 string 	JC101 string 	JC102 string 	JC103 string 	JC104 string 	JC105 string 	JC106 string 	JC107 string 	JC108 string 	JC109 string 	JC110 string 	JC111 string 	JC112 string 	JC113 string 	JC114 string 	JC115 string 	JC116 string 	JC117 string 	JC118 string 	JC119 string 	JC120 string 	JC121 string 	JC122 string 	JC123 string 	JC124 string }  // JCHMASRecord は、JCHMAS（旧JCHMS）CSVの1行分を表します。 // キーはフィールド0（JANコード）とし、JC領域の情報を構造体として保持します。 type JCHMASRecord struct { 	JANCode string   // CSV のインデックス0 (JANコード) 	JC      JCFields // JC 領域の情報 }  // ParseJCHMAS は、入力の io.Reader から CSV データを読み込み、 // 各行を JCHMASRecord のスライスに変換して返します。 // CSV はヘッダーなしで、各行は少なくとも 125 フィールド（0〜124）を持つことが前提です。 func ParseJCHMAS(r io.Reader) ([]JCHMASRecord, error) { 	reader := csv.NewReader(r) 	rows, err := reader.ReadAll() 	if err != nil { 		return nil, err 	}  	var records []JCHMASRecord 	for i, row := range rows { 		// 行のフィールド数が125未満の場合は、警告を出してその行をスキップ 		if len(row) < 125 { 			log.Printf("Row %d: insufficient fields (%d)", i+1, len(row)) 			continue 		}  		// JC領域のデータを構造体に格納 		jc := JCFields{ 			JC000: row[0], 			JC001: row[1], 			JC002: row[2], 			JC003: row[3], 			JC004: row[4], 			JC005: row[5], 			JC006: row[6], 			JC007: row[7], 			JC008: row[8], 			JC009: row[9], 			JC010: row[10], 			JC011: row[11], 			JC012: row[12], 			JC013: row[13], 			JC014: row[14], 			JC015: row[15], 			JC016: row[16], 			JC017: row[17], 			JC018: row[18], 			JC019: row[19], 			JC020: row[20], 			JC021: row[21], 			JC022: row[22], 			JC023: row[23], 			JC024: row[24], 			JC025: row[25], 			JC026: row[26], 			JC027: row[27], 			JC028: row[28], 			JC029: row[29], 			JC030: row[30], 			JC031: row[31], 			JC032: row[32], 			JC033: row[33], 			JC034: row[34], 			JC035: row[35], 			JC036: row[36], 			JC037: row[37], 			JC038: row[38], 			JC039: row[39], 			JC040: row[40], 			JC041: row[41], 			JC042: row[42], 			JC043: row[43], 			JC044: row[44], 			JC045: row[45], 			JC046: row[46], 			JC047: row[47], 			JC048: row[48], 			JC049: row[49], 			JC050: row[50], 			JC051: row[51], 			JC052: row[52], 			JC053: row[53], 			JC054: row[54], 			JC055: row[55], 			JC056: row[56], 			JC057: row[57], 			JC058: row[58], 			JC059: row[59], 			JC060: row[60], 			JC061: row[61], 			JC062: row[62], 			JC063: row[63], 			JC064: row[64], 			JC065: row[65], 			JC066: row[66], 			JC067: row[67], 			JC068: row[68], 			JC069: row[69], 			JC070: row[70], 			JC071: row[71], 			JC072: row[72], 			JC073: row[73], 			JC074: row[74], 			JC075: row[75], 			JC076: row[76], 			JC077: row[77], 			JC078: row[78], 			JC079: row[79], 			JC080: row[80], 			JC081: row[81], 			JC082: row[82], 			JC083: row[83], 			JC084: row[84], 			JC085: row[85], 			JC086: row[86], 			JC087: row[87], 			JC088: row[88], 			JC089: row[89], 			JC090: row[90], 			JC091: row[91], 			JC092: row[92], 			JC093: row[93], 			JC094: row[94], 			JC095: row[95], 			JC096: row[96], 			JC097: row[97], 			JC098: row[98], 			JC099: row[99], 			JC100: row[100], 			JC101: row[101], 			JC102: row[102], 			JC103: row[103], 			JC104: row[104], 			JC105: row[105], 			JC106: row[106], 			JC107: row[107], 			JC108: row[108], 			JC109: row[109], 			JC110: row[110], 			JC111: row[111], 			JC112: row[112], 			JC113: row[113], 			JC114: row[114], 			JC115: row[115], 			JC116: row[116], 			JC117: row[117], 			JC118: row[118], 			JC119: row[119], 			JC120: row[120], 			JC121: row[121], 			JC122: row[122], 			JC123: row[123], 			JC124: row[124], 		}  		// レコードを生成（キーは row[0] の JANコード） 		record := JCHMASRecord{ 			JANCode: row[0], 			JC:      jc, 		} 		records = append(records, record) 	} 	return records, nil }

----- C:\Dev\YAMATO\js\dat.js -----
document.addEventListener('DOMContentLoaded', () => {   const uploadBtn = document.getElementById('uploadBtn');   const fileInput = document.getElementById('fileInput');   const indicator = document.getElementById('indicator');   const output = document.getElementById('output');    if (!uploadBtn || !fileInput || !indicator || !output) {     console.error("必要な DOM 要素が見つかりません。HTML を確認してください。");     return;   }    // アップロードボタンをクリックでファイル選択ダイアログを表示   uploadBtn.addEventListener('click', () => {     fileInput.click();   });    fileInput.addEventListener('change', async () => {     const files = fileInput.files;     if (!files || files.length === 0) {       console.warn("ファイルが選択されていません。");       return;     }      // Indicator に選択されたファイル数を表示     indicator.textContent = `${files.length} 個のファイルが選択されました。`;      let results = [];     // 各ファイルを1個ずつアップロード     for (let i = 0; i < files.length; i++) {       const formData = new FormData();       formData.append('file', files[i]);        try {         const res = await fetch('/upload', {           method: 'POST',           body: formData         });         if (!res.ok) throw new Error(`HTTPエラー: ${res.status}`);         // レスポンスはプレーンテキストとして受け取る         const text = await res.text();         results.push(`[${files[i].name}]:\n${text}`);       } catch (err) {         results.push(`[${files[i].name}]: アップロード失敗 (${err.message})`);       }     }     output.textContent = results.join("\n\n");     indicator.textContent += " アップロード処理が完了しました。";     fileInput.value = '';   }); });

----- C:\Dev\YAMATO\ma0\mao.go -----
package ma0  import ( 	"encoding/json" 	"net/http" 	"sync" )  // MA0Record は MA0 の各レコード情報を保持する構造体です。 type MA0Record struct { 	JANCode          string `json:"janCode"` 	PackagingUnit    string `json:"packagingUnit"` 	ConversionFactor string `json:"conversionFactor"` }  var ( 	// ma0Data は in‑memory のマスター情報を保持します。 	ma0Data = make(map[string]MA0Record) 	// mutex により同時アクセスの排他制御を行います。 	mutex sync.Mutex )  // CheckOrCreateMA0 は、指定された JAN コードについて、 // 既に登録済みかをチェックし、存在すればそのレコードと false を返し、 // 存在しなければダミー値（PackagingUnit: "錠", ConversionFactor: "100"）を用いて // 新規に登録し、登録したレコードと true を返します。エラーは基本的に発生しません。 func CheckOrCreateMA0(jan string) (MA0Record, bool, error) { 	mutex.Lock() 	defer mutex.Unlock()  	if rec, exists := ma0Data[jan]; exists { 		return rec, false, nil 	}  	newRec := MA0Record{ 		JANCode:          jan, 		PackagingUnit:    "錠",   // 仮の値。実際はマスターCSVから取得するなどの処理を追加可能 		ConversionFactor: "100", // 仮の値 	} 	ma0Data[jan] = newRec 	return newRec, true, nil }  // ViewMA0Handler は、現在の MA0 の中身（登録された MA0Record の一覧）を JSON 形式で返却します。 func ViewMA0Handler(w http.ResponseWriter, r *http.Request) { 	mutex.Lock() 	defer mutex.Unlock()  	// ma0Data をスライスに変換して返す。 	var records []MA0Record 	for _, rec := range ma0Data { 		records = append(records, rec) 	}  	w.Header().Set("Content-Type", "application/json") 	json.NewEncoder(w).Encode(map[string]interface{}{ 		"MA0Records": records, 	}) }

----- C:\Dev\YAMATO\static\css\styles.css -----
body {   font-family: Arial, sans-serif;   margin: 1em; } header button {   margin-right: .5em;   padding: .4em 1em; } #indicator {   margin: 1em 0;   font-weight: bold; } #outputTable {   width: 100%;   border-collapse: collapse; } #outputTable th, #outputTable td {   border: 1px solid #ccc;   padding: .3em .6em;   font-size: .85em; } #outputTable th {   background: #f0f0f0;   text-align: left; }

----- C:\Dev\YAMATO\static\js\dat.js -----
document.addEventListener('DOMContentLoaded', () => {   // 各DOM要素の取得   const btn       = document.getElementById('datBtn');   const input     = document.getElementById('datInput');   const indicator = document.getElementById('indicator');   const table     = document.getElementById('outputTable');   const thead     = table.querySelector('thead');   const tbody     = table.querySelector('tbody');    // DATファイルアップロードボタンをクリックで隠しファイル入力をトリガー   btn.addEventListener('click', () => {     input.click();   });    // ファイル選択後の処理   input.addEventListener('change', async () => {     if (!input.files.length) return;      // アップロード開始状態を indicator に表示     indicator.textContent = 'DATアップロード中…';      // テーブルヘッダー、ボディの初期化     thead.innerHTML = `       <tr>         <th>卸コード</th>         <th>日付</th>         <th>納品／返品</th>         <th>伝票番号</th>         <th>行番号</th>         <th>JANコード</th>         <th>商品名</th>         <th>数量</th>         <th>単価</th>         <th>小計</th>         <th>包装薬価</th>         <th>有効期限</th>         <th>ロット番号</th>       </tr>`;     tbody.innerHTML = '';      // 選択された全ファイルについてループ処理     for (let file of input.files) {       const formData = new FormData();       formData.append('datFileInput[]', file);        try {         // /uploadDat エンドポイントに対して POST リクエスト送信         const res = await fetch('/uploadDat', { method: 'POST', body: formData });         if (!res.ok) {           throw new Error(`HTTPステータス: ${res.status}`);         }         // サーバーから返却される JSON を取得（"DATRecords" などのキーを持つ）         const result = await res.json();          // 指定ファイルの処理結果を indicator に表示         indicator.textContent = `${file.name}: DAT読み込み: ${result.DATReadCount} 件 | MA0作成: ${result.MA0CreatedCount} 件 | 重複: ${result.DuplicateCount} 件`;          // DATRecords に含まれる各レコードをテーブルへ追加         if (result.DATRecords && result.DATRecords.length > 0) {           result.DATRecords.forEach(record => {             const tr = document.createElement('tr');             tr.innerHTML = `               <td>${record.DatOroshiCode}</td>               <td>${record.DatDate}</td>               <td>${record.DatDeliveryFlag}</td>               <td>${record.DatReceiptNumber}</td>               <td>${record.DatLineNumber}</td>               <td>${record.DatJanCode}</td>               <td>${record.DatProductName}</td>               <td>${record.DatQuantity}</td>               <td>${record.DatUnitPrice}</td>               <td>${record.DatSubtotal}</td>               <td>${record.DatPackagingDrugPrice}</td>               <td>${record.DatExpiryDate}</td>               <td>${record.DatLotNumber}</td>             `;             tbody.appendChild(tr);           });         }       } catch (err) {         // エラー発生時の処理         indicator.textContent = "アップロード中にエラーが発生しました: " + err.message;         console.error(err);       }     }     // 全ファイル処理完了後のメッセージ     indicator.textContent += " 完了";     // 入力値のリセット     input.value = '';   }); });

----- C:\Dev\YAMATO\static\js\ma0.js -----
document.addEventListener('DOMContentLoaded', () => {   const ma0Btn = document.getElementById('ma0Btn');   const ma0Container = document.getElementById('ma0Container');   const indicator = document.getElementById('indicator');    ma0Btn.addEventListener('click', async () => {     indicator.textContent = 'MA0表示中…';     try {       const res = await fetch('/viewMA0');       if (!res.ok) throw new Error(`HTTPステータス: ${res.status}`);        // サーバから返却される JSON データは、"MA0Records" キーに MA0Record の配列が入っているものとする       const data = await res.json();        if (data.MA0Records && data.MA0Records.length > 0) {         ma0Container.innerHTML =           `<h2>MA0レコード（${data.MA0Records.length} 件）</h2>` +           `<ul>` +           data.MA0Records             .map(rec => `<li>${rec.janCode} (包装単位: ${rec.packagingUnit}, 換算係数: ${rec.conversionFactor})</li>`)             .join('') +           `</ul>`;       } else {         ma0Container.innerHTML = `<h2>MA0は空です。</h2>`;       }       indicator.textContent = '';     } catch (err) {       indicator.textContent = "MA0の表示中にエラー: " + err.message;       console.error(err);     }   }); });

----- C:\Dev\YAMATO\static\js\usage.js -----
document.addEventListener('DOMContentLoaded', () => {   const usageBtn   = document.getElementById('usageBtn');   const usageInput = document.getElementById('usageInput');   const indicator  = document.getElementById('indicator');   const table      = document.getElementById('outputTable');   const thead      = table.querySelector('thead');   const tbody      = table.querySelector('tbody');    usageBtn.addEventListener('click', () => usageInput.click());    usageInput.addEventListener('change', async () => {     if (!usageInput.files || usageInput.files.length === 0) return;      indicator.textContent = 'USAGEアップロード中…';     // 新しいヘッダー（項目名）に合わせて設定     thead.innerHTML = `       <tr>         <th>日付</th>         <th>YJコード</th>         <th>JANコード</th>         <th>商品名</th>         <th>数量</th>         <th>単位コード</th>         <th>単位名称</th>       </tr>`;     tbody.innerHTML = '';      for (let file of usageInput.files) {       const formData = new FormData();       formData.append('usageFileInput[]', file);        try {         const res = await fetch('/uploadUsage', { method: 'POST', body: formData });         if (!res.ok) throw new Error(`HTTPエラー: ${res.status}`);         const result = await res.json();         indicator.textContent = `${file.name}: USAGE読み込み: ${result.TotalRecords} 件`;         if (result.USAGERecords && result.USAGERecords.length > 0) {           result.USAGERecords.forEach(record => {             const tr = document.createElement('tr');             tr.innerHTML = `               <td>${record.usageDate}</td>               <td>${record.usageYjCode}</td>               <td>${record.usageJanCode}</td>               <td>${record.usageProductName}</td>               <td>${record.usageAmount}</td>               <td>${record.usageUnit}</td>               <td>${record.usageUnitName}</td>             `;             tbody.appendChild(tr);           });         }       } catch (error) {         indicator.textContent = "アップロード中にエラー: " + error.message;         console.error("USAGEアップロードエラー:", error);       }     }     indicator.textContent += " 完了";     usageInput.value = '';   }); });

----- C:\Dev\YAMATO\static\index.html -----
<!DOCTYPE html> <html lang="ja"> <head>   <meta charset="UTF-8">   <title>YAMATO Upload</title>   <!-- 必要に応じてスタイルシートを調整 -->   <link rel="stylesheet" href="css/styles.css"> </head> <body>   <header>     <!-- DATファイルアップロードボタン -->     <button id="datBtn">DATファイルアップロード</button>     <!-- USAGEファイルアップロードボタン -->     <button id="usageBtn">USAGEファイルアップロード</button>     <!-- MA0確認ボタン -->     <button id="ma0Btn">MA0確認</button>   </header>      <!-- アップロード処理の進捗や結果を表示するエリア -->   <section id="indicator"></section>      <!-- MA0の中身を表示するエリア -->   <section id="ma0Container"></section>      <!-- 解析結果（必要に応じてテーブル表示） -->   <table id="outputTable">     <thead></thead>     <tbody></tbody>   </table>      <!-- 隠しのファイル入力（DAT/USAGE用） -->   <input type="file" id="datInput" accept=".dat" multiple hidden>   <input type="file" id="usageInput" accept=".csv" multiple hidden>      <!-- JavaScriptファイルの読み込み -->   <script src="js/dat.js"></script>   <script src="js/usage.js"></script>   <script src="js/ma0.js"></script> </body> </html>

----- C:\Dev\YAMATO\tani\tani.go -----
package tani  import ( 	"encoding/csv" 	"io" 	"log"  	"golang.org/x/text/encoding/japanese" 	"golang.org/x/text/transform" )  // ParseTANI は、TANI CSV ファイルを Shift‑JIS から UTF‑8 に変換しながら読み込み、 // 各行のフィールド0（単位コード）をキー、フィールド1（単位名称）を値とするマップを返します。 func ParseTANI(r io.Reader) (map[string]string, error) { 	// Shift‑JIS → UTF‑8 変換を適用 	decoder := transform.NewReader(r, japanese.ShiftJIS.NewDecoder()) 	reader := csv.NewReader(decoder) 	records, err := reader.ReadAll() 	if err != nil { 		return nil, err 	} 	taniMap := make(map[string]string) 	for _, row := range records { 		if len(row) < 2 { 			log.Printf("TANI行のフィールド不足: %v", row) 			continue 		} 		code := row[0] 		unit := row[1] 		taniMap[code] = unit 	} 	return taniMap, nil }

----- C:\Dev\YAMATO\usage\usage.go -----
package usage  import ( 	"bufio" 	"io" 	"log" 	"os" 	"strings"  	"YAMATO/ma0" 	"YAMATO/tani"  	"golang.org/x/text/encoding/japanese" 	"golang.org/x/text/transform" )  // UsageRecord は USAGE CSV の各レコード情報を保持します。 type UsageRecord struct { 	UsageDate        string `json:"usageDate"`        // 使用日 	UsageYjCode      string `json:"usageYjCode"`      // YJコード（以前の UsageCode） 	UsageJanCode     string `json:"usageJanCode"`     // JANコード（以前の JANCode） 	UsageProductName string `json:"usageProductName"` // 商品名（以前の ProductName） 	UsageAmount      string `json:"usageAmount"`      // 数量／金額（以前の QuantityOrAmount） 	UsageUnit        string `json:"usageUnit"`        // 単位コード（以前の Unit） 	UsageUnitName    string `json:"usageUnitName"`    // 単位名称（以前の UnitName → TANI マスターから取得） }  // taniMap は TANI マスターのデータを保持するグローバル変数です。 var taniMap map[string]string  // loadTaniMap は、所定のパスから TANI.CSV を読み込み、 taniMap にセットします。 func loadTaniMap() { 	if taniMap != nil { 		return 	} 	// TANI.CSV のパス。各環境に合わせて修正してください。 	f, err := os.Open("C:\\Dev\\YAMATO\\SOU\\TANI.CSV") 	if err != nil { 		log.Printf("TANIファイルオープンエラー: %v", err) 		taniMap = make(map[string]string) 		return 	} 	defer f.Close() 	tMap, err := tani.ParseTANI(f) 	if err != nil { 		log.Printf("TANIパース失敗: %v", err) 		taniMap = make(map[string]string) 		return 	} 	taniMap = tMap }  // ParseUsageFile は、USAGE CSV をパースして動作情報を UsageRecord として返します。 // USAGE CSV は Shift‑JIS でエンコードされているため変換を適用し、最初のヘッダー行をスキップして各行を処理します。 func ParseUsageFile(r io.Reader) ([]UsageRecord, error) { 	loadTaniMap()  	var records []UsageRecord 	scanner := bufio.NewScanner(transform.NewReader(r, japanese.ShiftJIS.NewDecoder())) 	headerSkipped := false 	for scanner.Scan() { 		line := scanner.Text() 		// ヘッダー行（"UsageDate" を含む場合）をスキップ 		if !headerSkipped { 			if strings.Contains(line, "UsageDate") { 				headerSkipped = true 				continue 			} 			headerSkipped = true 		} 		// カンマ区切りで分割 		fields := strings.Split(line, ",") 		if len(fields) < 6 { 			continue 		} 		// 各フィールドの前後の引用符や空白を除去 		for i, f := range fields { 			fields[i] = strings.Trim(f, "\" ") 		} 		// 仮のフィールド配置（実際は仕様に合わせて調整してください）： 		// fields[0]: 使用日, [1]: YJコード, [2]: JANコード, [3]: 商品名, [4]: 数量／金額, [5]: 単位コード 		ur := UsageRecord{ 			UsageDate:        fields[0], 			UsageYjCode:      fields[1], 			UsageJanCode:     fields[2], 			UsageProductName: fields[3], 			UsageAmount:      fields[4], 			UsageUnit:        fields[5], 		} 		// TANI マスターから、単位コードに対応する単位名称を取得 		if name, ok := taniMap[ur.UsageUnit]; ok { 			ur.UsageUnitName = name 		} else { 			ur.UsageUnitName = ur.UsageUnit 		} 		records = append(records, ur)  		// MA0 照合処理：UsageRecord の JANコード（UsageJanCode）をキーとしてチェック 		_, created, err := ma0.CheckOrCreateMA0(ur.UsageJanCode) 		if err != nil { 			log.Printf("[USAGE] MA0照合エラー (JAN=%q): %v", ur.UsageJanCode, err) 		} else if created { 			log.Printf("[USAGE] 新規MA0登録: %q", ur.UsageJanCode) 		} 	} 	if err := scanner.Err(); err != nil { 		return nil, err 	} 	return records, nil }

----- C:\Dev\YAMATO\app.db -----
SQLite format 3   @                                                                     .�)    < �<                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            P++Ytablesqlite_sequencesqlite_sequenceCREATE TABLE sqlite_sequence(name,seq)�o##�%tabledat_recordsdat_recordsCREATE TABLE dat_records ( 		id INTEGER PRIMARY KEY AUTOINCREMENT, 		wholesale_code TEXT, 		dat_date TEXT, 		delivery_flag TEXT, 		receipt_number TEXT, 		line_number TEXT, 		jan_code TEXT, 		product_name TEXT, 		quantity TEXT, 		unit_price TEXT, 		subtotal TEXT, 		packaging_drug_price TEXT, 		expiry_date TEXT, 		lot_number TEXT 	)      o v�b � B�!�  o                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   �  !']090202001412025061不明0266886014987616002849���������50�¸��ճ��      300U     3MLX200001000002575000002575000028322609PVGHD9�	 !']090202001412025061不明0266885014987428143303��ؼò˶�ճ0.75MG�õ    0.75MG      2���00001000004998000004998000054982612D85079�  !']090202001412025061不明0266884044987081189960۷����̴�NA�-��100MG     100MG    7ϲX100000100000112000000112000001232280230625� !']090202001412025061不明0266884034987080002017����޽���CA��ֳ2MG��   2MG PTP      100T00001000001445000001445000015902709424906�  !']090202001412025061不明0266884024987306066212�޵̴��ݼ�ֳ�޲            PTP      630T00001000003379000003379000037172805045E1� !']090202001412025061不明0266884014987081189656�������OD��ֳ4MG�DSE   4MG PTP       56T00001000000937000000937000010302706BB1B03� !']090202001412025061不明0266883014987128320011�������Ѽ�ֳ0.25MG��0.25MG PTP      100T00001000000945000000945000010402710J829� !'O090269001912025061不明8981857034987123875240�۾��޼�ֳ20MG�NIG� PTP      100T00001000000572000000572000006302802H90457� !'O090269001912025061不明8981857024987376556712̴��̴ż�ݴݻݴݼ�ֳ60MG�SAN 100T000020000026090000052180000287027024K044A� !'O090269001912025061不明8981857014987123159036�������� ʲ�޳��ֳ  PTP     10X1000001000008180000008180000090102709565444    � �                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     #dat_records

----- C:\Dev\YAMATO\ma0.db -----
SQLite format 3   @    �   	                                                           � .�) � Z Z�                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          u�Qtablema0ma0CREATE TABLE ma0 ( 		jan_code TEXT PRIMARY KEY, 		packaging_unit TEXT, 		conversion_factor TEXT 	)%9 indexsqlite_autoindex_ma0_1ma0          �    ���jQ8�����pW>% � � � � � v ] D + �����|cJ1������iP7 � � � � � o V = $ 	�	�	�	�	�	u	\	C	*	�����{bI0������hO6�����nU<# �����t[B)�����zaH/�����eK1�����{aG-�����w]C               �'4987080320111錠100�'4987116530323錠100�'4987616003969錠100�'4987028205630錠100�'4987035209614錠100�'4987614415511錠100�'4987080023616錠100�'4987171659304錠100�'4987081183579錠100� '4987376085519錠100�'4987123407915錠100�'4987080323013錠100� '4987080394013錠100�	'4987128144327錠100�'4987081182664錠100�'4987123155175錠100�'4987233103042錠100�'4987286105147錠100�'4987286105239錠100�'4987058566039錠100�'4987060005366錠100�'4987060004802錠100� '4987896010817錠100'4987813702047錠100~'4987286105628錠100}'4987222810593錠100|'4987047211346錠100{'4987306066724錠100z'4987306066625錠100y'4987919100730錠100x'4987028266563錠100w'4987080037644錠100v'4987901112109錠100u'4987858200041錠100t'4987858100044錠100s'4987123154352錠100r'4987123873857錠100q'4987123002721錠100p'4987080033912錠100o'4987080670018錠100n'4987047110885錠100m'4987080537113錠100l'4987770529800錠100k'4987080103516錠100j'4987916002211錠100i'4987770588807錠100h'4987080396017錠100g'4987188412176錠100f'4987051276331錠100e'4987770510501錠100d'4987138806840錠100c'4987413300612錠100b'4987081185481錠100a'4987080680017錠100`'4987173015818錠100_'4987497307224錠100^'4987081106998錠100]'4987035510611錠100\'4987306066984錠100['4987901008303錠100Z'4987035622611錠100Y'4987051183127錠100X'4987443384446錠100W'4987028234784錠100V'4987376056212錠100U'4987123127127錠100T'4987211153106錠100S'4987901129800錠100R'4987413870511錠100Q'4987123875271錠100P'4987138801944錠100O'4987138800244錠100N'4987901094207錠100M'4987672957640錠100L'4987080362012錠100K'4987123001175錠100J'4987376075312錠100I'4987428879905錠100H'4987376245302錠100G'4987123873758錠100F'4987123872645錠100E'4987028200079錠100D'4987123152228錠100C'4987123157520錠100B'4987123872058錠100A'4987376371117錠100@'4987376069519錠100?'4987123158831錠100>'4987246745222錠100='4987616003655錠100<'4987641077829錠100;'4987954810465錠100:'4987155592016錠1009'4987081107032錠1008'4987080774013錠1007'4987039454621錠1006'4987222682152錠1005'4987081186518錠1004'4987080034711錠1003'4987413836029錠1002'4987233105343錠1001'4987081187836錠1000'4987286113500錠100/'4987080035510錠100.'4987190020338錠100-'4987116530170錠100,'4987901128605錠100+'4987901128209錠100*'4987614415504錠100)'4987128006496錠100('4987199101854錠100''4987616003211錠100&'4987128305216錠100%'4987616002467錠100$'4987081189939錠100#'4987081100316錠100"'4987081105403錠100!'4987042231004錠100 '4987116530002錠100'4987616003631錠100'4987081185719錠100'4987476113310錠100'4987155071078錠100'4987896010824錠100'4987080012719錠100'4987080192015錠100'4987439095851錠100'4987035654209錠100'4987058565032錠100'4987080190011錠100'4987123139182錠100'4987080152118錠100'4987116530132錠100'4987123154406錠100'4987233102878錠100'4987123417280錠100'4987123416627錠100 '4987185809900錠100'4987081186907錠100'4987116530347錠100 '4987616002849錠100	'4987428143303錠100'4987081189960錠100'4987080002017錠100'4987306066212錠100'4987081189656錠100'4987128320011錠100'4987123875240錠100'4987376556712錠100'4987123   �(   �   �    	��z��	w	�c# �EI	��Au�����-�!Y��{���?^/ �B�W3	/ �. �	e��h�	 ��JG7])��� yq�@ ���q;f ��8 �9��{K�p�����]��%� O SU U� s� a��	����$�	A�� 1 5�7��}����%��m[	�T	�� ��	� �Ko�-	gk =_ �Q	� �	S�  � gM C ���� ���yi���� �	�� ���� +��                '4987813741053 �'4987138800848 �'4987233151005 �'4987896030587 �'4987060308023 �'4987222671422 �'4987190065919 �'4987387591429 �'4987087016246 �'4987128107285 �'4987120263002 �'4987770525208 �'4987123872997 �'4987081185795 �'4987081189700 �'4987155478044 �'4987123416603 �'4987123415880 �'4987155004168 �'4987035209713 �'4987155783049 �'4987081186556 �'4987081186464 �'4987081186754 �'4987123158367 �'4987376085403 �'4987376097819 �'4987614413012 �'4987080119913 �'4987123157575 �'4987155593020 �'4987081181490 �'4987080598015 �'4987080681014 �'4987081102303 �'4987057432342 �'4987341103095 �'4987413580717 �'4987028253358 �'4987770504609 �'4987901069809 �'4987123001373 �'4987086533546 �'4987020015916 �'4987222697415 �'4987155165241 �'4987155165265 �'4987123873949 �'4987123002974 �'4987376349901 �'4987080320111 �'4987116530323 �'4987616003969 �'4987028205630 �'4987035209614 �'4987614415511 �'4987080023616 �'4987171659304 �'4987081183579 �'4987376085519 �'4987123407915 �'4987080323013 �'4987080394013 �'4987128144327 �'4987081182664 �'4987123155175 �'4987233103042 �'4987286105147 �'4987286105239 �'4987058566039 �'4987060005366 �'4987060004802 �'4987896010817 �'4987813702047'4987286105628~'4987222810593}'4987047211346|'4987306066724{'4987306066625z'4987919100730y'4987028266563x'4987080037644w'4987901112109v'4987858200041u'4987858100044t'4987123154352s'4987123873857r'4987123002721q'4987080033912p'4987080670018o'4987047110885n'4987080537113m'4987770529800l'4987080103516k'4987916002211j'4987770588807i'4987080396017h'4987188412176g'4987051276331f'4987770510501e'4987138806840d'4987413300612c'4987081185481b'4987080680017a'4987173015818`'4987497307224_'4987081106998^'4987035510611]'4987306066984\'4987901008303['4987035622611Z'4987051183127Y'4987443384446X'4987028234784W'4987376056212V'4987123127127U'4987211153106T'4987901129800S'4987413870511R'4987123875271Q'4987138801944P'4987138800244O'4987901094207N'4987672957640M'4987080362012L'4987123001175K'4987376075312J'4987428879905I'4987376245302H'4987123873758G'4987123872645F'4987028200079E'4987123152228D'4987123157520C'4987123872058B'4987376371117A'4987376069519@'4987123158831?'4987246745222>'4987616003655='4987641077829<'4987954810465;'4987155592016:'49870811070329'49870807740138'49870394546217'49872226821526'49870811865185'49870800347114'49874138360293'49872331053432'49870811878361'49872861135000'4987080035510/'4987190020338.'4987116530170-'4987901128605,'4987901128209+'4987614415504*'4987128006496)'4987199101854('4987616003211''4987128305216&'4987616002467%'4987081189939$'4987081100316#'4987081105403"'4987042231004!'4987116530002 '4987616003631'4987081185719'4987476113310'4987155071078'4987896010824'4987080012719'4987080192015'4987439095851'4987035654209'4987058565032'4987080190011'4987123139182'4987080152118'4987116530132'4987123154406'4987233102878'4987123417280'4987123416627'4987185809900 '4987081186907'4987116530347'4987616002849 '4987428143303	'4987081189960'4987080002017'4987306066212'4987081189656'4987128320011'4987   '4987376085519 �   '4987116530002     �C �����jQ8�����pW>% � � � � � v ] D + �����|cJ1������iP7 � � � � � o V = $ 	�	�	�	�	�	u	\	C	*	�����{bI0������hO6�����nU<# �����t[B)�����zaH/�����eK1�����{aG-�����w]C               �'4987080320111錠100�'4987116530323錠100�'4987616003969錠100�'4987028205630錠100�'4987035209614錠100�'4987614415511錠100�'4987080023616錠100�'4987171659304錠100�'4987081183579錠100� '4987376085519錠100�'4987123407915錠100�'4987080323013錠100� '4987080394013錠100�	'4987128144327錠100�'4987081182664錠100�'4987123155175錠100�'4987233103042錠100�'4987286105147錠100�'4987286105239錠100�'4987058566039錠100�'4987060005366錠100�'4987060004802錠100� '4987896010817錠100'4987813702047錠100~'4987286105628錠100}'4987222810593錠100|'4987047211346錠100{'4987306066724錠100z'4987306066625錠100y'4987919100730錠100x'4987028266563錠100w'4987080037644錠100v'4987901112109錠100u'4987858200041錠100t'4987858100044錠100s'4987123154352錠100r'4987123873857錠100q'4987123002721錠100p'4987080033912錠100o'4987080670018錠100n'4987047110885錠100m'4987080537113錠100l'4987770529800錠100k'4987080103516錠100j'4987916002211錠100i'4987770588807錠100h'4987080396017錠100g'4987188412176錠100f'4987051276331錠100e'4987770510501錠100d'4987138806840錠100c'4987413300612錠100b'4987081185481錠100a'4987080680017錠100`'4987173015818錠100_'4987497307224錠100^'4987081106998錠100]'4987035510611錠100\'4987306066984錠100['4987901008303錠100Z'4987035622611錠100Y'4987051183127錠100X'4987443384446錠100W'4987028234784錠100V'4987376056212錠100U'4987123127127錠100T'4987211153106錠100S'4987901129800錠100R'4987413870511錠100Q'4987123875271錠100P'4987138801944錠100O'4987138800244錠100N'4987901094207錠100M'4987672957640錠100L'4987080362012錠100K'4987123001175錠100J'4987376075312錠100I'4987428879905錠100H'4987376245302錠100G'4987123873758錠100F'4987123872645錠100E'4987028200079錠100D'4987123152228錠100C'4987123157520錠100B'4987123872058錠100A'4987376371117錠100@'4987376069519錠100?'4987123158831錠100>'4987246745222錠100='4987616003655錠100<'4987641077829錠100;'4987954810465錠100:'4987155592016錠1009'4987081107032錠1008'4987080774013錠1007'4987039454621錠1006'4987222682152錠1005'4987081186518錠1004'4987080034711錠1003'4987413836029錠1002'4987233105343錠1001'4987081187836錠1000'4987286113500錠100/'4987080035510錠100.'4987190020338錠100-'4987116530170錠100,'4987901128605錠100+'4987901128209錠100*'4987614415504錠100)'4987128006496錠100('4987199101854錠100''4987616003211錠100&'4987128305216錠100%'4987616002467錠100$'4987081189939錠100#'4987081100316錠100"'4987081105403錠100!'4987042231004錠100 '4987116530002錠100'4987616003631錠100'4987081185719錠100'4987476113310錠100'4987155071078錠100'4987896010824錠100'4987080012719錠100'4987080192015錠100'4987439095851錠100'4987035654209錠100'4987058565032錠100'4987080190011錠100'4987123139182錠100'4987080152118錠100'4987116530132錠100'4987123154406錠100'4987233102878錠100'4987123417280錠100'4987123416627錠100 '4987185809900錠100'4987081186907錠100'4987116530347錠100 '4987616002849錠100	'4987428143303錠100'4987081189960錠100'4987080002017錠100'4987306066212錠100'4987081189656錠100'4987128320011錠100'4987123875240錠100'4987376556712錠100'4987123159036錠100    �, ����~dJ0�����z`F, � � � � � v \ B ( �����rX>$ �����nT:  � � � � � j P 6  	�	�	�	�	�	f	L	2	�����|bH.�����x^D*�����tZ@&�����pV<"�����lR8�����hN4 ����~dJ0�����z`F,�('4987376616218錠100�''4987443328921錠100�&'4987020020996錠100�%'4987084120366錠100�$'4987901128704錠100�#'4987123872973錠100�"'4987306054295錠100�!'4987123161909錠100� '4987081189458錠100�'4987123415781錠100�'4987081187102錠100�'4987376069410錠100�'4987233012931錠100�'4987116176514錠100�'4987138802545錠100�'4987699058931錠100�'4987020020118錠100�'4987616003167錠100�'4987084316318錠100�'4987614439302錠100�'4987497307217錠100�'4987086533485錠100�'4987174414016錠100�'4987123146951錠100�'4987901129107錠100�'4987901126809錠100�'4987123872096錠100� '4987081185740錠100�'4987901059305錠100�'4987155152074錠100� '4987123418164錠100�	'4987271063254錠100�'4987614413104錠100�'4987080033516錠100�'4987376357111錠100�'4987080001416錠100�'4987376007313錠100�'4987294394229錠100�'4987086170802錠100�'4987080515074錠100� '4987080120018錠100�'4987081120048錠100�~'4987233731825錠100�}'4987919100334錠100�|'4987035184614錠100�{'4987123158879錠100�z'4987081333509錠100�y'4987128006502錠100�x'4987155203097錠100�w'4987047211025錠100�v'4987770528803錠100�u'4987616002481錠100�t'4987497308870錠100�s'4987792101084錠100�r'4987328145445錠100�q'4987158144007錠100�p'4987087029000錠100�o'4987087003871錠100�n'4987123003452錠100�m'4987123872829錠100�l'4987123871051錠100�k'4987190018731錠100�j'4987123874540錠100�i'4987222001755錠100�h'4987376711005錠100�g'4987271042655錠100�f'4987057649306錠100�e'4987081108756錠100�d'4987123416634錠100�c'4987116140331錠100�b'4987116530217錠100�a'4987925106603錠100�`'4987476119862錠100�_'4987155823042錠100�^'4987081103157錠100�]'4987081103119錠100�\'4987792291815錠100�['4987080303718錠100�Z'4987614412909錠100�Y'4987376056229錠100�X'4987080100119錠100�W'4987081103324錠100�V'4987080001911錠100�U'4987080039419錠100�T'4987080633112錠100�S'4987294394120錠100�R'4987120223808錠100�Q'4562216550169錠100�P'4987081102402錠100�O'4987650650105錠100�N'4987087034868錠100�M'4987123155144錠100�L'4987057251097錠100�K'4987128115372錠100�J'4987312126641錠100�I'4987901117500錠100�H'4987813741053錠100�G'4987138800848錠100�F'4987233151005錠100�E'4987896030587錠100�D'4987060308023錠100�C'4987222671422錠100�B'4987190065919錠100�A'4987387591429錠100�@'4987087016246錠100�?'4987128107285錠100�>'4987120263002錠100�='4987770525208錠100�<'4987123872997錠100�;'4987081185795錠100�:'4987081189700錠100�9'4987155478044錠100�8'4987123416603錠100�7'4987123415880錠100�6'4987155004168錠100�5'4987035209713錠100�4'4987155783049錠100�3'4987081186556錠100�2'4987081186464錠100�1'4987081186754錠100�0'4987123158367錠100�/'4987376085403錠100�.'4987376097819錠100�-'4987614413012錠100�,'4987080119913錠100�+'4987123157575錠100�*'4987155593020錠100�)'4987081181490錠100�('4987080598015錠100�''4987080681014錠100�&'4987081102303錠100�%'4987057432342錠100�$'4987341103095錠100�#'4987413580717錠100�"'4987028253358錠100�!'4987770504609錠100� '4987901069809錠100�'4987123001373錠100�'4987086533546錠100�'4987020015916錠100�'4987222697415錠100�'4987155165241錠100�'4987155165265錠100�'4987123873949錠100�'4987123002974錠100�'4987376349901錠100 Q �� ������|jWE2�������zgUC1m � �� � � � � � t a�� N ; ( � ���������p]J8%��d���4���+}jXE3�  � � � � � � �Z z g T A .  	�	�	�	�	�	�	�	s	`G!	N	<	)		�������mw�[H6#�������>���zgTA.������taO<*�����m�Q����o\J8% �������~kXE3 ����          '4987080398011�'4987116140218�'4987081187331}'4987080128014z'4987058171387�'4987084114419x'4987080015710v'4987081185337t'4987080199113s'4987081184477q'4987080783015o'4987057581798�'4987086170741�'4987060307354h'4987080038016�'4987080002215f'4987080035411e'4987116212212`'4987087035032_'4987081153657^'4987084313997Z'4987080322115X'4987086220569W� 4987123140225�'4987080132714�'4987081187249�'4987086471282�� 4987123136297�'4987060008688�  24987123872058B'49871238715251'4987123871051 �'4987123418164 '4987123417280'4987123416634 �'4987123416627'4987123416603 �'4987123415880 �'4987123415781'4987123407915 �'4987123161909!'	4987123159036'4987123158879 �'4987123158831?'4987123158367 �'4987123157575 �'4987123157520C'4987123155175 �'4987123155144 �'4987123154406'4987123154352s'4987123154185S'4987123152228D'4987123150002+'4987123146951'4987123144087;'4987123139182'4987123127127U'4987123108324P'4987123085816Q'4987123003452 �'4987123002974 �'4987123002721q'4987123001373 �'4987123001175K'4987120263002 �'4987120223808 �'4987116530347'4987116530323 �'4987116530217 �'4987116530170-'4987116530132'4987116530002 '4987116176514'4987116140331 �'4987116140317E'4987087034868 �'4987087029000 �'4987087016246 �'4987087003871 �'4987086533546 �'4987086533485'4987086512251M'4987086170802'4987084316318'4987084120366%'4987081333509 �'4987081189960'4987081189939$'4987081189700 �'4987081189656'4987081189458 '49870811878361'4987081187171.'4987081187102'4987081187003U'4987081186907'4987081186853/'4987081186754 �'4987081186556 �'49870811865185'4987081186464 �'4987081185795 �'4987081185740 '4987081185719'4987081185481b'4987081183579 �'4987081182664 �'4987081181490 �'4987081120048 �'4987081108756 �'4987081107070C'49870811070329'4987081106998^'4987081105403"'4987081103324 �'4987081103157 �'4987081103119 �'4987081102402 �'4987081102303 �'4987081101092N'4987081100316#'49870807740138'4987080681014 �'4987080680017a'4987080670018o'4987080633112 �'4987080598015 �'4987080537113m'4987080515074'4987080406112-'4987080396017h'4987080394013 �'4987080362012L'4987080344117B'4987080323013 �'4987080320111 �'4987080303718 �'4987080271116I'4987080192015'4987080190011'4987080152118'4987080120018 '4987080119913 �'4987080106012*'4987080103516k'4987080100218>'4987080100119 �'4987080039419 �'4987080037644w'4987080035510/'49870800347114'4987080033912p'4987080033516'4987080030416='4987080023616 �'4987080012719'4987080002017'4987080001911 �'4987080001416'4987060308023 �'4987060005366 �'4987060004802 �'4987058566039 �'4987058565032'49870582312898'4987058210284O'4987058173381F'4987058013281?'4987057649306 �'4987057432342 �'4987057251097 �'4987051276331f'4987051183127Y'4987047211346|'49870472112475'4987047211025 �'4987047120761)'4987047110885n'4987042231004!'49870394546217'4987035654209'4987035622611Z'4987035510611]'4987035209713 �'4987035209614 �'4987035184614 �'4987028266563x'4987028253358 �'4987028234784W'4987028205630 �'49870282030634'4987028200079E'4987020020996&'4987020020118'4987020015916 �'4562216550169 � � ����t��0�X�~��bP<�����lZG5 *�vdP���mZG�+dQ�iV�aN;)����! �����n[I�7$������4�����>���|�C=�j)X�F3�!E2� � � � �� � � � {� i�� V C 1 k����  ���������wu����{��� h V CG 1� �Q  	�	�	�~	�	��	�	��O3v<	y	gb�	U	Bc	0	�P	���                    '4987123872645F'4987185807555�'4987116530132�'4987306014503�'4987116530170-�'4987123873949 �'4987123873857r'4987123873758G'4987123872997 �'4987123872973#'4987123872829 �'4987116530217 �'4987341108274~'4987120223808 �'4987116530347'4987116530323 �'4987155161052u'4987155412031r'4987376075411p'4987138806246m'4987120263002 �'4987213053510k'4987213052810j'4987123001175Kd'4987290241732c'4987123002721qb'4987123001373 �'4987173017720]'4987274131332\'4987123002974 �'4987170020419Y'4987123085816Q'4987123079631y'4987123003452 �'4987188412077L'4987123136297�'4987123127127U'4987123108324P'4987376067201G'4987190510808D'4987155067132A'4987123136389n'4987155103069<'4987123144087;'4987123140225�'4987123139182'49871280878396'49871231544063'4987123154352s'4987123154185S'4987123152228D'4987123150002+'4987123149402i'4987123146951'4987306054295"'4987376069410'4987233012931'4987138802545'4987123157575 �'4987123157520C'4987123155175 �'4987123155144 �'4987174414016'4987123158879 �'4987123158831?'4987123158367 �'4987155152074'4987271063254	'4987123159166gm'	4987123159036'4987376007313'4987294394229'4987233731825 �'4987123161909!'4987128006502 �'4987155203097 �'4987123416603 �'4987123415880 �'4987123415781'4987123407915 �'4987328145445 �'4987158144007 �'4987190018731 �'4987123874540 �'4987222001755 �'4987123416627�'4987271042655 �'4987123417280�'4987123416634 �'4987155823042 �'4987123871051 �'4987123418164 '4987376056229 �'4987294394120 �'49871238715251'4987128115372 �'4987312126641 �  G4987954810465;'4987919100730y'4987916002211j'4987901129800S  ]4987901128605,'4987901128209+'4987901117500 �'4987901112109v'4987901094207N'4987901069809 �'4987901008303['4987896030587 �'4987896010824'4987896010817 �'4987858200041u'4987858100044t'4987813741053 �'4987813702047  \4987770588807i'4987770529800l'4987770525208 �'4987770510501e'4987770504609 �'4987672957640M'4987641077829<'4987616003969 �'4987616003655='4987616003631'4987616003211''4987616002849 '4987616002467%'4987614415511 �'4987614415504*  J4987614413012 �'4987497307224_'4987476113310  4987443384446X'4987439095851'4987428879905I'4987428143303	'4987413870511R'49874138360293'4987413580717 �'4987413300612c'4987387591429 �'4987376556712'4987155244175�'4987120121906�'4987173018536�'4987123872096'4987123872058B'4987376085403 �'4987376075312J'4987376069519@'4987376056212V'4987341103095 �'4987306066984\'4987306066724{'4987306066625z'4987306066212'49872861135000'4987286105628~'4987286105239 �'4987286105147 �'4987246745222>'4987233151005 �'49872331053432'4987233103042 �'4987233102878'4987222810593}'4987222697415 �'49872226821526'4987222671422 �'4987211153106T'4987199101854('4987190065919 �'4987190020338.'4987188412176g'4987185809900 '4987173015818`'4987171659304 �'4987155783049 �'4987155593020 �'4987155592016:'4987155478044 �'4987155165265 �'4987155165241 �'4987155071078'4987155004168 �'4987138806840d'4987138801944P'4987138800848 �'4987138800244O'4987128320011'4987128305216&'4987128144327 �'4987128107285 �'4987128006496)'4987123875271Q'4987123875240    l ����~dJ0�����z`F, � � � � � v \ B ( �����rX>$ �����nT:  � � � � � j P 6  	�	�	�	�	�	f	L	2	�����|bH.�����x^D*�����tZ@&�����pV<"                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        �'4987155244175錠100�'4987120121906錠100�'4987080038016錠100�'4987173018536錠100�'4987376086011錠100�'4987057581798錠100�'4987086170741錠100� '4987641074163錠100�'4987058171387錠100�'4987060008688錠100� '4987080398011錠100�	'4987185807555錠100�'4987476111514錠100�'4987123140225錠100�'4987306014503錠100�'4987080132714錠100�'4987081187249錠100�'4987086471282錠100�'4987413660624錠100�'4987123136297錠100� '4987116140218錠100�'4987376559904錠100�~'4987341108274錠100�}'4987081187331錠100�|'4987699050027錠100�{'4987614410608錠100�z'4987080128014錠100�y'4987123079631錠100�x'4987084114419錠100�w'4987770555809錠100�v'4987080015710錠100�u'4987155161052錠100�t'4987081185337錠100�s'4987080199113錠100�r'4987155412031錠100�q'4987081184477錠100�p'4987376075411錠100�o'4987080783015錠100�n'4987123136389錠100�m'4987138806246錠100�l'4987901007405錠100�k'4987213053510錠100�j'4987213052810錠100�i'4987123149402錠100�h'4987060307354錠100�g'4987123159166錠100�f'4987080002215錠100�e'4987080035411錠100�d'4987650706109錠100�c'4987290241732錠100�b'4987858210125錠100�a'4987896010879錠100�`'4987116212212錠100�_'4987087035032錠100�^'4987081153657錠100�]'4987173017720錠100�\'4987274131332錠100�['4987376331821錠100�Z'4987084313997錠100�Y'4987170020419錠100�X'4987080322115錠100�W'4987086220569錠100�V'4987901110006錠100�U'4987081187003錠100�T'4987376097710錠100�S'4987123154185錠100�R'4987901017305錠100�Q'4987123085816錠100�P'4987123108324錠100�O'4987058210284錠100�N'4987081101092錠100�M'4987086512251錠100�L'4987188412077錠100�K'4987901063005錠100�J'4987901039406錠100�I'4987080271116錠100�H'4987901097802錠100�G'4987376067201錠100�F'4987058173381錠100�E'4987116140317錠100�D'4987190510808錠100�C'4987081107070錠100�B'4987080344117錠100�A'4987155067132錠100�@'4987614413005錠100�?'4987058013281錠100�>'4987080100218錠100�='4987080030416錠100�<'4987155103069錠100�;'4987123144087錠100�:'4987443277229錠100�9'4987901017701錠100�8'4987058231289錠100�7'4987699058726錠100�6'4987128087839錠100�5'4987047211247錠100�4'4987028203063錠100�3'4987497308856錠100�2'4987901040402錠100�1'4987123871525錠100�0'4987376710015錠100�/'4987081186853錠100�.'4987081187171錠100�-'4987080406112錠100�,'4987476170306錠100�+'4987123150002錠100�*'4987080106012錠100�)'4987047120761錠100    d� �������}kXE2�������zgTB/  � � � � � � � s ` M ; (  ��������p]J8%�������}jWE2  � � � � � � � x e R ? ,  	�	�	�	�	�	�	�	r	_	L	:	(		��                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        '4987376086011�'4987641074163�'4987954810465;'4987925106603 �'4987919100730y'4987919100334 �'4987916002211j'4987901129800S'4987901129107'4987901128704$'4987901128605,'4987901128209+'4987901126809'4987901117500 �'4987901112109v'4987901110006V'4987901097802H'4987901094207N'4987901069809 �'4987901063005K'4987901059305'49879010404022'4987901039406J'49879010177019'4987901017305R'4987901008303['4987901007405l'4987896030587 �'4987896010879a'4987896010824'4987896010817 �'4987858210125b'4987858200041u'4987858100044t'4987813741053 �'4987813702047'4987792291815 �'4987792101084 �'4987770588807i'4987770555809w'4987770529800l'4987770528803 �'4987770525208 �'4987770510501e'4987770504609 �'4987699058931'49876990587267'4987699050027|'4987672957640M'4987650706109d'4987650650105 �'4987641077829<'4987616003969 �'4987616003655='4987616003631'4987616003211''4987616003167'4987616002849 '4987616002481 �'4987616002467%'4987614439302'4987614415511 �'4987614415504*'4987614413104'4987614413012 �'4987614413005@'4987614412909 �'4987614410608{'4987497308870 �'49874973088563'4987497307224_'4987497307217'4987476170306,'4987476119862 �'4987476113310'4987476111514�'4987443384446X'4987443328921''4987443277229:'4987439095851'4987428879905I'4987428143303	'4987413870511R'49874138360293'4987413660624�'4987413580717 �'4987413300612c'4987387591429 �'4987376711005 �'49873767100150'4987376616218('4987376559904'4987376556712'4987376371117A'4987376357111'4987376349901 �'4987376331821['4987376245302H'4987376097819 �'4987376097710T

----- C:\Dev\YAMATO\main.go -----
package main  import ( 	"encoding/json" 	"log" 	"net/http" 	"os/exec" 	"runtime"  	"YAMATO/dat" 	"YAMATO/ma0" 	"YAMATO/usage" )  func uploadDatHandler(w http.ResponseWriter, r *http.Request) { 	if r.Method != http.MethodPost { 		http.Error(w, "Method Not Allowed", http.StatusMethodNotAllowed) 		return 	} 	err := r.ParseMultipartForm(10 << 20) 	if err != nil { 		http.Error(w, "Error parsing form: "+err.Error(), http.StatusBadRequest) 		return 	} 	files := r.MultipartForm.File["datFileInput[]"] 	if len(files) == 0 { 		http.Error(w, "No DAT file uploaded", http.StatusBadRequest) 		return 	}  	var allRecords []dat.DATRecord 	totalCount, ma0CreatedCount, duplicateCount := 0, 0, 0 	for _, fileHeader := range files { 		file, err := fileHeader.Open() 		if err != nil { 			log.Println("Error opening DAT file:", err) 			continue 		} 		defer file.Close()  		records, tc, mc, dc, err := dat.ParseDATFile(file) 		if err != nil { 			log.Println("Error parsing DAT file:", err) 			continue 		} 		totalCount += tc 		ma0CreatedCount += mc 		duplicateCount += dc 		allRecords = append(allRecords, records...) 	}  	resp := map[string]interface{}{ 		"DATReadCount":    totalCount, 		"MA0CreatedCount": ma0CreatedCount, 		"DuplicateCount":  duplicateCount, 		"DATRecords":      allRecords, // ここにDATの内容をすべて含む 	} 	w.Header().Set("Content-Type", "application/json") 	json.NewEncoder(w).Encode(resp) }  func uploadUsageHandler(w http.ResponseWriter, r *http.Request) { 	if r.Method != http.MethodPost { 		http.Error(w, "Method Not Allowed", http.StatusMethodNotAllowed) 		return 	} 	err := r.ParseMultipartForm(10 << 20) 	if err != nil { 		http.Error(w, "Error parsing form: "+err.Error(), http.StatusBadRequest) 		return 	} 	files := r.MultipartForm.File["usageFileInput[]"] 	if len(files) == 0 { 		http.Error(w, "No USAGE file uploaded", http.StatusBadRequest) 		return 	} 	var allRecords []usage.UsageRecord 	for _, fileHeader := range files { 		file, err := fileHeader.Open() 		if err != nil { 			log.Println("Error opening USAGE file:", err) 			continue 		} 		defer file.Close() 		records, err := usage.ParseUsageFile(file) 		if err != nil { 			log.Println("Error parsing USAGE file:", err) 			continue 		} 		allRecords = append(allRecords, records...) 	} 	w.Header().Set("Content-Type", "application/json") 	json.NewEncoder(w).Encode(map[string]interface{}{ 		"USAGERecords": allRecords, 		"TotalRecords": len(allRecords), 	}) }  func viewMA0Handler(w http.ResponseWriter, r *http.Request) { 	ma0.ViewMA0Handler(w, r) }  func autoLaunchBrowser(url string) { 	var cmd string 	var args []string 	switch runtime.GOOS { 	case "windows": 		cmd = "cmd" 		args = []string{"/c", "start", url} 	case "darwin": 		cmd = "open" 		args = []string{url} 	default: 		cmd = "xdg-open" 		args = []string{url} 	} 	if err := exec.Command(cmd, args...).Start(); err != nil { 		log.Printf("Browser auto-launch failed: %v", err) 	} }  func main() { 	fs := http.FileServer(http.Dir("./static")) 	http.Handle("/", fs) 	http.HandleFunc("/uploadDat", uploadDatHandler) 	http.HandleFunc("/uploadUsage", uploadUsageHandler) 	http.HandleFunc("/viewMA0", viewMA0Handler) 	go autoLaunchBrowser("http://localhost:8080") 	log.Println("Server starting on port :8080") 	if err := http.ListenAndServe(":8080", nil); err != nil { 		log.Fatal("ListenAndServe:", err) 	} }

----- C:\Dev\YAMATO\yamato.db -----
SQLite format 3   @                                                                     .� �    �                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     �A�itablema0ma0CREATE TABLE ma0 ( MA000JC000JanCode TEXT, MA001JC001JanCodeShikibetsuKubun TEXT, MA002JC002KyuuJanCode TEXT, MA003JC003TouitsuShouhinCode TEXT, MA004JC004YakkaKijunShuusaiIyakuhinCode TEXT, MA005JC005KyuuYakkaKijunShuusaiIyakuhinCode TEXT, MA006JC006HOTBangou TEXT, MA007JC007ReseputoCode1 TEXT, MA008JC008ReseputoCode2 TEXT, MA009JC009YJCode TEXT, MA010JC010YakkouBunruiCode TEXT, MA011JC011YakkouBunruiMei TEXT, MA012JC012ShiyouKubunCode TEXT, MA013JC013ShiyouKubunMeishou TEXT, MA014JC014NihonHyoujunShouhinBunruiBangou TEXT, MA015JC015ZaikeiCode TEXT, MA016JC016ZaikeiKigou TEXT, MA017JC017ZaikeiMeishou TEXT, MA018JC018ShouhinMei TEXT, MA019JC019HankakuShouhinMei TEXT, MA020JC020Kika   %9 indexsqlite_autoindex_ma0_1ma0                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         kuYouryou TEXT, MA021JC021HankakuKikakuYouryou TEXT, MA022JC022ShouhinMeiKanaSortYou TEXT, MA023JC023ShouhinMeiKanpouYouKigou TEXT, MA024JC024IppanMeishou TEXT, MA025JC025YakkaShuusaiMeishou TEXT, MA026JC026ReseYouIyakuhinMei TEXT, MA027JC027KikakuTaniMeishou TEXT, MA028JC028KikakuTaniKigou TEXT, MA029JC029HanbaiMotoCode TEXT, MA030JC030HanbaiMotoMei TEXT, MA031JC031HanbaiMotoMeiKana TEXT, MA032JC032HanbaiMotoMeiRyakuMei TEXT, MA033JC033SeizouMotoYunyuuMotoCode TEXT, MA034JC034SeizouMotoYunyuuMotoMei TEXT, MA035JC035SeizouMotoYunyuuMotoMeiKana TEXT, MA036JC036SeizouMotoYunyuuMotoMeiRyakuMei TEXT, MA037JC037HousouKeitai TEXT, MA038JC038HousouTaniSuuchi TEXT, MA039JC039HousouTaniTani TEXT, MA040JC040HousouSuuryouSuuchi TEXT, MA041JC041HousouSuuryouTani TEXT, MA042JC042HousouIrisuuSuuchi TEXT, MA043JC043HousouIrisuuTani TEXT, MA044JC044HousouSouryouSuuchi TEXT, MA045JC045HousouSouryouTani TEXT, MA046JC046HousouYouryouSuuchi TEXT, MA047JC047HousouYouryouTani TEXT, MA048JC048HousouYakkaKeisuu TEXT, MA049JC049GenTaniYakka TEXT, MA050JC050GenHousouYakka TEXT, MA051JC051KyuuTaniYakka TEXT, MA052JC052KyuuHousouYakka TEXT, MA053JC053KokuchiTaniYakka TEXT, MA054JC054KokuchiHousouYakka TEXT, MA055JC055YakkaKaiteiNengappi TEXT, MA056JC056YakkaShuusaiNengappi TEXT, MA057JC057HanbaiKaishiNengappi TEXT, MA058JC058KeikaSochiNengappi TEXT, MA059JC059HatsubaiChuushiNengappi TEXT, MA060JC060SeizouChuushiNengappi TEXT, MA061JC061Doyaku TEXT, MA062JC062Gekiyaku TEXT, MA063JC063Mayaku TEXT, MA064JC064Kouseishinyaku TEXT, MA065JC065Kakuseizai TEXT, MA066JC066KakuseizaiGenryou TEXT, MA067JC067ShuukanseiIyakuhin TEXT, MA068JC068ShiteiIyakuhinKyuuKiseiKubun TEXT, MA069JC069YoushijiIyakuhinKyuuKiseiKubun TEXT, MA070JC070KetsuekiSeizai TEXT, MA071JC071NihonYakkyokuhou TEXT, MA072JC072YuukouKikan TEXT, MA073JC073ShiyouKigen TEXT, MA074JC074SeibutsuYuraiSeihin TEXT, MA075JC075Kouhatsuhin TEXT, MA076JC076YakkaKijunShuusaiKubun TEXT, MA077JC077KichouGimuKubun TEXT, MA078JC078ShouhinKubun TEXT, MA079JC079ShohousenIyakuhin TEXT, MA080JC080ChuushiRiyuuKubun TEXT, MA081JC081MishiyouKyuuRyuutsuuKanrihin TEXT, MA082JC082MentenanceKubun TEXT, MA083JC083KouhatsuhinNoAruSenpatsuhinKubun TEXT, MA084JC084AuthorizedGeneric TEXT, MA085JC085Biosimilar TEXT, MA086JC086HighRiskYaku TEXT, MA087JC087Kuuran1 TEXT, MA088JC088Kuuran2 TEXT, MA089JC089Shitsuon TEXT, MA090JC090Reisho TEXT, MA091JC091Reizou TEXT, MA092JC092Reitou TEXT, MA093JC093Ansho TEXT, MA094JC094Shakou TEXT, MA095JC095KimitsuYouki TEXT, MA096JC096MippuuYouki TEXT, MA097JC097Kikenbutsu TEXT, MA098JC098OndoJougen TEXT, MA099JC099OndoKagen TEXT, MA100JC100SonotaHokanjouNoChui TEXT, MA101JC101KonpouJuuryouSizeJouhou TEXT, MA102JC102KonpouTateSizeJouhou TEXT, MA103JC103KonpouYokoSizeJouhou TEXT, MA104JC104KonpouTakasaSizeJouhou TEXT, MA105JC105KonpouTaiseiSizeJouhou TEXT, MA106JC106ChuubakoJuuryouSizeJouhou TEXT, MA107JC107ChuubakoTateSizeJouhou TEXT, MA108JC108ChuubakoYokoSizeJouhou TEXT, MA109JC109ChuubakoTakasaSizeJouhou TEXT, MA110JC110ChuubakoTaiseiSizeJouhou TEXT, MA111JC111KousouJuuryouSizeJouhou TEXT, MA112JC112KousouTateSizeJouhou TEXT, MA113JC113KousouYokoSizeJouhou TEXT, MA114JC114KousouTakasaSizeJouhou TEXT, MA115JC115KousouTaiseiSizeJouhou TEXT, MA116JC116KonpouTaniSizeJouhou TEXT, MA117JC117HacchuuTaniSizeJouhou TEXT, MA118JC118KoushinKubun TEXT, MA119JC119TourokuNengappi TEXT, MA120JC120KoushinNengappi TEXT, MA121JC121ChouzaiHousouTaniCode TEXT, MA122JC122HanbaiHousouTaniCode TEXT, MA123JC123IppanMeiKana TEXT, MA124JC124SaishouYakkaKansanKeisuu TEXT, MA125JA001JanCode TEXT, MA126JA002 TEXT, MA127JA003 TEXT, MA128JA004 TEXT, MA129JA005 TEXT, MA130JA006HousouSuuryouSuuchi TEXT, MA131JA007HousouSuuryouTaniCode TEXT, MA132JA008HousouSouryouSuuchi TEXT, MA133 TEXT, MA134 TEXT, MA135 TEXT, MA136 TEXT, MA137 TEXT, MA138 TEXT, MA139 TEXT, MA140 TEXT, MA141 TEXT, MA142 TEXT, MA143 TEXT, MA144 TEXT, MA145 TEXT, MA146 TEXT, MA147 TEXT, MA148 TEXT, MA149 TEXT, MA150 TEXT, MA151 TEXT, MA152 TEXT, MA153 TEXT, MA154 TEXT,      created_at DATETIME DEFAULT CURRENT_TIMESTAMP,   PRIMARY KEY(MA000JC000JanCode) )

